{"version":3,"sources":["../../../src/spec/unit/adder.spec.js"],"names":["adder","require","describe","_numberA","_numberB","beforeEach","it","result","add","expect","toEqual"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;;AAEAC,SAAS,cAAT,EAAyB,YAAW;AAClC,MAAIC,QAAJ;AACA,MAAIC,QAAJ;;AAEAC,aAAW,YAAW,CAAE,CAAxB;;AAEAC,KAAG,qCAAH,EAA0C,YAAW;AACnDH,eAAW,CAAX;AACAC,eAAW,CAAX;AACA,QAAIG,SAASP,MAAMQ,GAAN,CAAUL,QAAV,EAAoBC,QAApB,CAAb;;AAEAK,WAAOF,MAAP,EAAeG,OAAf,CAAuB,CAAvB;AACD,GAND;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA7BD","file":"adder.spec.js","sourcesContent":["var adder = require('../../services/adder');\n\ndescribe('adder tests ', function() {\n  var _numberA;\n  var _numberB;\n\n  beforeEach(function() {});\n\n  it('should return numberA pulse numberB', function() {\n    _numberA = 1;\n    _numberB = 2;\n    var result = adder.add(_numberA, _numberB);\n\n    expect(result).toEqual(3);\n  });\n\n  // it('should return undefined for numberA equals 0', function() {\n  //   _numberA = 0;\n  //   _numberB = 2;\n  //   var result = adder.add(_numberA, _numberB);\n  //\n  //   expect(result).toEqual(undefined);\n  // });\n  //\n  // it('should return undefined for numberB equals 0', function() {\n  //   _numberA = 2;\n  //   _numberB = 0;\n  //   var result = adder.add(_numberA, _numberB);\n  //\n  //   expect(result).toEqual(undefined);\n  // });\n});\n"]}