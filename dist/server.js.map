{"version":3,"sources":["../src/server.js"],"names":["dotenv","require","express","adder","subtractor","multiplier","divider","config","app","PORT","process","env","use","static","get","req","res","json","message","send","handleCalculatorRequest","add","query","numberA","numberB","subtract","multiple","divide","status","listen","console","log","module","exports","func","parseInt","result","toString"],"mappings":";;AAAA;AACA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;;AAEA,IAAME,QAAQF,QAAQ,kBAAR,CAAd;AACA,IAAMG,aAAaH,QAAQ,uBAAR,CAAnB;AACA,IAAMI,aAAaJ,QAAQ,uBAAR,CAAnB;AACA,IAAMK,UAAUL,QAAQ,oBAAR,CAAhB;;AAEAD,OAAOO,MAAP;AACA,IAAMC,MAAMN,SAAZ;AACA,IAAMO,OAAOC,QAAQC,GAAR,CAAYF,IAAzB;;AAEAD,IAAII,GAAJ,CAAQ,WAAR,EAAqBV,QAAQW,MAAR,CAAe,sBAAf,CAArB;AACAL,IAAII,GAAJ,CAAQ,OAAR,EAAiBV,QAAQW,MAAR,CAAe,MAAf,CAAjB;;AAEAL,IAAIM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,IAAJ,CAAS,EAAEC,SAAS,aAAX,EAAT;AACD,CAFD;;AAIA;;;;;;;;;AASAV,IAAIM,GAAJ,CAAQ,MAAR,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACjCA,MAAIG,IAAJ,CAASC,wBAAwBjB,MAAMkB,GAA9B,EAAmCN,IAAIO,KAAJ,CAAUC,OAA7C,EAAsDR,IAAIO,KAAJ,CAAUE,OAAhE,CAAT;AACD,CAFD;;AAIA;;;;;;;;;AASAhB,IAAIM,GAAJ,CAAQ,WAAR,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACtCA,MAAIG,IAAJ,CAASC,wBAAwBhB,WAAWqB,QAAnC,EAA6CV,IAAIO,KAAJ,CAAUC,OAAvD,EAAgER,IAAIO,KAAJ,CAAUE,OAA1E,CAAT;AACD,CAFD;;AAIA;;;;;;;;;AASAhB,IAAIM,GAAJ,CAAQ,WAAR,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACtCA,MAAIG,IAAJ,CAASC,wBAAwBf,WAAWqB,QAAnC,EAA6CX,IAAIO,KAAJ,CAAUC,OAAvD,EAAgER,IAAIO,KAAJ,CAAUE,OAA1E,CAAT;AACD,CAFD;;AAIA;;;;;;;;;AASAhB,IAAIM,GAAJ,CAAQ,SAAR,EAAmB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACpCA,MAAIG,IAAJ,CAASC,wBAAwBd,QAAQqB,MAAhC,EAAwCZ,IAAIO,KAAJ,CAAUC,OAAlD,EAA2DR,IAAIO,KAAJ,CAAUE,OAArE,CAAT;AACD,CAFD;;AAIA;AACAhB,IAAII,GAAJ,CAAQ,UAACG,GAAD,EAAMC,GAAN,EAAc;AACpBA,MAAIY,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB,WAArB;AACD,CAFD;;AAIA;AACAX,IAAIqB,MAAJ,CAAWpB,IAAX,EAAiB,YAAM;AACrBqB,UAAQC,GAAR,CAAY,aAAZ,EAA2BtB,IAA3B;AACD,CAFD;;AAIAuB,OAAOC,OAAP,GAAiBzB,GAAjB;;AAEA,SAASY,uBAAT,CAAiCc,IAAjC,EAAuCX,OAAvC,EAAgDC,OAAhD,EAAyD;AACvD,MAAID,UAAUY,SAASZ,OAAT,CAAd;AACA,MAAIC,UAAUW,SAASX,OAAT,CAAd;AACA,MAAIY,SAASF,KAAKX,OAAL,EAAcC,OAAd,CAAb;;AAEA,MAAIY,MAAJ,EAAY;AACV,WAAOA,OAAOC,QAAP,EAAP;AACD;;AAED,QAAM,mBAAN;AACD","file":"server.js","sourcesContent":["//modules import\nconst dotenv = require('dotenv');\nconst express = require('express');\n\nconst adder = require('./services/adder');\nconst subtractor = require('./services/subtractor');\nconst multiplier = require('./services/multiplier');\nconst divider = require('./services/divider');\n\ndotenv.config();\nconst app = express();\nconst PORT = process.env.PORT;\n\napp.use('/coverage', express.static('coverage/lcov-report'));\napp.use('/docs', express.static('docs'));\n\napp.get('/', (req, res) => {\n  res.json({ message: 'Hello World' });\n});\n\n/**\n * @api {get} /add Add Two Numbers\n * @apiName Add Two Numbers\n * @apiGroup Adder\n *\n * @apiParam {numberA} numberA NumberA.\n * @apiParam {numberB} numberB NumberB.\n * @apiSuccess {Object} Addition Addition Of Two Numbers.\n */\napp.get('/add', function(req, res) {\n  res.send(handleCalculatorRequest(adder.add, req.query.numberA, req.query.numberB));\n});\n\n/**\n * @api {get} /subtract Subtract Two Numbers\n * @apiName Subtract Two Numbers\n * @apiGroup Subtract\n *\n * @apiParam {numberA} numberA NumberA.\n * @apiParam {numberB} numberB NumberB.\n * @apiSuccess {Object} Subtraction Subtraction Of Two Numbers.\n */\napp.get('/subtract', function(req, res) {\n  res.send(handleCalculatorRequest(subtractor.subtract, req.query.numberA, req.query.numberB));\n});\n\n/**\n * @api {get} /multiply Multipy Two Numbers\n * @apiName Multipy Two Numbers\n * @apiGroup Multipy\n *\n * @apiParam {numberA} numberA NumberA.\n * @apiParam {numberB} numberB NumberB.\n * @apiSuccess {Object} Multiplication  Multiplication Of Two Numbers.\n */\napp.get('/multiply', function(req, res) {\n  res.send(handleCalculatorRequest(multiplier.multiple, req.query.numberA, req.query.numberB));\n});\n\n/**\n * @api {get} /divide Divide Two Numbers\n * @apiName Divide Two Numbers\n * @apiGroup Divide\n *\n * @apiParam {numberA} numberA NumberA.\n * @apiParam {numberB} numberB NumberB.\n * @apiSuccess {Object} Division Division Of Two Numbers.\n */\napp.get('/divide', function(req, res) {\n  res.send(handleCalculatorRequest(divider.divide, req.query.numberA, req.query.numberB));\n});\n\n// Handle 404 - Keep this as a last route\napp.use((req, res) => {\n  res.status(404).send('NOT FOUND');\n});\n\n//running the server\napp.listen(PORT, () => {\n  console.log('Running on ', PORT);\n});\n\nmodule.exports = app;\n\nfunction handleCalculatorRequest(func, numberA, numberB) {\n  var numberA = parseInt(numberA);\n  var numberB = parseInt(numberB);\n  var result = func(numberA, numberB);\n\n  if (result) {\n    return result.toString();\n  }\n\n  throw 'Calculation Error';\n}\n"]}